{
  "name": "happyrepair",
  "version": "1.0.0",
  "description": "Stop wasting time scrolling Google to find mechanics. Do it all in one place with transparent pricing and direct communication.",
  "private": true,
  "workspaces": [
    "backend",
    "apps/*",
    "packages/*"
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:web\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:web": "cd apps/web-dashboard && npm run dev",
    "dev:mobile": "cd apps/mobile && npm start",
    "dev:all": "concurrently \"npm run dev:backend\" \"npm run dev:web\" \"npm run dev:mobile\"",

    "build": "npm run build:backend && npm run build:web",
    "build:backend": "cd backend && npm run build",
    "build:web": "cd apps/web-dashboard && npm run build",
    "build:mobile": "cd apps/mobile && npm run build",

    "test": "npm run test:backend && npm run test:web",
    "test:backend": "cd backend && npm test",
    "test:web": "cd apps/web-dashboard && npm test",
    "test:mobile": "cd apps/mobile && npm test",
    "test:e2e": "cd tests/e2e && npm test",

    "lint": "npm run lint:backend && npm run lint:web",
    "lint:backend": "cd backend && npm run lint",
    "lint:web": "cd apps/web-dashboard && npm run lint",
    "lint:mobile": "cd apps/mobile && npm run lint",
    "lint:fix": "npm run lint:backend -- --fix && npm run lint:web -- --fix",

    "db:setup": "./scripts/setup-database.sh",
    "db:migrate": "./scripts/migrate-database.sh",
    "db:seed": "./scripts/seed-database.sh",
    "db:reset": "./scripts/reset-database.sh",
    "db:backup": "./scripts/backup-database.sh",

    "docker:up": "docker-compose up postgres redis",
    "docker:up-all": "docker-compose --profile admin up",
    "docker:down": "docker-compose down",
    "docker:reset": "docker-compose down -v && docker-compose up postgres redis",
    "docker:logs": "docker-compose logs -f",

    "install:all": "npm install && npm run install:backend && npm run install:web && npm run install:mobile",
    "install:backend": "cd backend && npm install",
    "install:web": "cd apps/web-dashboard && npm install",
    "install:mobile": "cd apps/mobile && npm install",

    "clean": "npm run clean:backend && npm run clean:web && npm run clean:mobile",
    "clean:backend": "cd backend && rm -rf node_modules dist",
    "clean:web": "cd apps/web-dashboard && rm -rf node_modules .next",
    "clean:mobile": "cd apps/mobile && rm -rf node_modules",
    "clean:all": "npm run clean && rm -rf node_modules",

    "deploy:staging": "./scripts/deploy-staging.sh",
    "deploy:production": "./scripts/deploy-production.sh",

    "setup:dev": "./scripts/setup-development.sh",
    "setup:hooks": "husky install",

    "type-check": "npm run type-check:backend && npm run type-check:web",
    "type-check:backend": "cd backend && npm run type-check",
    "type-check:web": "cd apps/web-dashboard && npm run type-check",

    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md,yml,yaml}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,md,yml,yaml}\"",

    "security:audit": "npm audit --workspaces",
    "security:fix": "npm audit fix --workspaces",

    "pre-commit": "lint-staged",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.3",
    "prettier": "^3.0.0",
    "typescript": "^5.1.6"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/happyrepair.git"
  },
  "keywords": [
    "auto-repair",
    "mechanics",
    "booking",
    "bilingual",
    "mexican-market",
    "react-native",
    "nodejs",
    "postgresql"
  ],
  "author": {
    "name": "HappyRepair Team",
    "email": "dev@happyrepair.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/yourusername/happyrepair/issues"
  },
  "homepage": "https://happyrepair.com",
  "funding": {
    "type": "individual",
    "url": "https://github.com/sponsors/happyrepair"
  }
}